{"version":3,"file":"dialog-content2.js","sources":["../../../../../../packages/components/dialog/src/dialog-content.vue"],"sourcesContent":["<template>\n  <div\n    :ref=\"composedDialogRef\"\n    :class=\"[\n      ns.b(),\n      ns.is('fullscreen', fullscreen),\n      ns.is('draggable', draggable),\n      { [ns.m('center')]: center },\n      customClass,\n    ]\"\n    :style=\"style\"\n    tabindex=\"-1\"\n    @click.stop\n  >\n    <header ref=\"headerRef\" :class=\"ns.e('header')\">\n      <slot name=\"header\">\n        <span role=\"heading\" :class=\"ns.e('title')\">\n          {{ title }}\n        </span>\n      </slot>\n      <button\n        v-if=\"showClose\"\n        :aria-label=\"t('el.dialog.close')\"\n        :class=\"ns.e('headerbtn')\"\n        type=\"button\"\n        @click=\"$emit('close')\"\n      >\n        <el-icon :class=\"ns.e('close')\">\n          <component :is=\"closeIcon || Close\" />\n        </el-icon>\n      </button>\n    </header>\n    <div :id=\"bodyId\" :class=\"ns.e('body')\">\n      <slot />\n    </div>\n    <footer v-if=\"$slots.footer\" :class=\"ns.e('footer')\">\n      <slot name=\"footer\" />\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport { useDraggable, useLocale } from '@element-plus/hooks'\nimport { CloseComponents, composeRefs } from '@element-plus/utils'\nimport { dialogInjectionKey } from '@element-plus/tokens'\nimport { dialogContentEmits, dialogContentProps } from './dialog-content'\n\nconst { t } = useLocale()\nconst { Close } = CloseComponents\n\ndefineOptions({ name: 'ElDialogContent' })\nconst props = defineProps(dialogContentProps)\ndefineEmits(dialogContentEmits)\n\nconst { dialogRef, headerRef, bodyId, ns, style } = inject(dialogInjectionKey)!\nconst { focusTrapRef } = inject(FOCUS_TRAP_INJECTION_KEY)!\n\nconst composedDialogRef = composeRefs(focusTrapRef, dialogRef)\n\nconst draggable = computed(() => props.draggable)\nuseDraggable(dialogRef, headerRef, draggable)\n</script>\n"],"names":["useLocale","CloseComponents","inject","dialogInjectionKey","FOCUS_TRAP_INJECTION_KEY","composeRefs","computed","useDraggable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,IAAA,MAAA,EAAA,MAAAA,eAAA,EAAA,CAAA;AACA,IAAA,MAAA,EAAA,KAAA,EAAA,GAAAC,oBAAA,CAAA;AAMA,IAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,GAAAC,WAAAC,yBAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,YAAA,EAAA,GAAAD,UAAA,CAAAE,+BAAA,CAAA,CAAA;AAEA,IAAA,MAAA,iBAAA,GAAAC,gBAAA,CAAA,YAAA,EAAA,SAAA,CAAA,CAAA;AAEA,IAAA,MAAA,SAAA,GAAAC,YAAA,CAAA,MAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,IAAAC,oBAAA,CAAA,SAAA,EAAA,WAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}