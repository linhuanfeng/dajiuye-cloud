{"version":3,"file":"select-dropdown.js","sources":["../../../../../../packages/components/select-v2/src/select-dropdown.tsx"],"sourcesContent":["import { computed, defineComponent, inject, ref, unref } from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref()\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      const { valueKey } = select.props\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey))\n      }\n      return isEqual(modelValue, get(target, valueKey))\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    expose({\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    })\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={(sized ? itemSize : estimatedSize) as number}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={item.disabled || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{item.label}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter } = EVENT_CODE\n      if (code !== tab) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc: {\n          onEscOrTab()\n          break\n        }\n        case down: {\n          onForward()\n          break\n        }\n        case up: {\n          onBackward()\n          break\n        }\n        case enter: {\n          onKeyboardSelect()\n          break\n        }\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n\n      if (data.length === 0) {\n        return (\n          <div\n            class={ns.b('dropdown')}\n            style={{\n              width: `${width}px`,\n            }}\n          >\n            {slots.empty?.()}\n          </div>\n        )\n      }\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div class={[ns.b('dropdown'), ns.is('multiple', multiple)]}>\n          <List\n            ref={listRef}\n            {...unref(listProps)}\n            className={ns.be('dropdown', 'list')}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            data={data}\n            height={height}\n            width={width}\n            total={data.length}\n            // @ts-ignore - dts problem\n            onKeydown={onKeydown}\n          >\n            {{\n              default: (props: ItemProps<any>) => <Item {...props} />,\n            }}\n          </List>\n        </div>\n      )\n    }\n  },\n})\n"],"names":["defineComponent","name","props","data","type","Array","required","hoveringIndex","Number","width","slots","expose","inject","selectV2InjectionKey","select","useNamespace","ns","ref","cachedHeights","listRef","isUndefined","isSized","computed","listProps","itemSize","estimatedSize","contains","valueKey","isObject","target","get","arr","item","disabled","multipleLimit","selected","isItemHovering","scrollToItem","resetScrollTop","value","list","unref","Item","itemProps","_createVNode","GroupItem","style","modelValue","onSelect","onHover","isItemSelected","onKeyboardSelect","onForward","onKeyboardNavigate","onBackward","onEscOrTab","onKeydown","e","code","down","enter","stopPropagation","FixedSizeList","DynamicSizeList","_mergeProps"],"mappings":"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"}