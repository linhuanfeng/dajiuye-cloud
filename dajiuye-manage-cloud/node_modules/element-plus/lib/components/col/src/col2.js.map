{"version":3,"file":"col2.js","sources":["../../../../../../packages/components/col/src/col.vue"],"sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"[ns.b(), classes]\" :style=\"style\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport { isNumber, isObject } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport { colProps } from './col'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElCol',\n})\n\nconst props = defineProps(colProps)\n\nconst { gutter } = inject(rowContextKey, { gutter: computed(() => 0) })\nconst ns = useNamespace('col')\n\nconst style = computed(() => {\n  const styles: CSSProperties = {}\n  if (gutter.value) {\n    styles.paddingLeft = styles.paddingRight = `${gutter.value / 2}px`\n  }\n  return styles\n})\n\nconst classes = computed(() => {\n  const classes: string[] = []\n  const pos = ['span', 'offset', 'pull', 'push'] as const\n\n  pos.forEach((prop) => {\n    const size = props[prop]\n    if (isNumber(size)) {\n      if (prop === 'span') classes.push(ns.b(`${props[prop]}`))\n      else if (size > 0) classes.push(ns.b(`${prop}-${props[prop]}`))\n    }\n  })\n\n  const sizes = ['xs', 'sm', 'md', 'lg', 'xl'] as const\n  sizes.forEach((size) => {\n    if (isNumber(props[size])) {\n      classes.push(ns.b(`${size}-${props[size]}`))\n    } else if (isObject(props[size])) {\n      Object.entries(props[size]).forEach(([prop, sizeProp]) => {\n        classes.push(\n          prop !== 'span'\n            ? ns.b(`${size}-${prop}-${sizeProp}`)\n            : ns.b(`${size}-${sizeProp}`)\n        )\n      })\n    }\n  })\n\n  // this is for the fix\n  if (gutter.value) {\n    classes.push(ns.is('guttered'))\n  }\n  return classes\n})\n</script>\n"],"names":["inject","rowContextKey","computed","useNamespace","isNumber","isObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAA,MAAA,EAAA,MAAA,EAAA,GAAAA,UAAA,CAAAC,iBAAA,EAAA,EAAA,QAAAC,YAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,GAAAC,mBAAA,KAAA,CAAA,CAAA;AAEA,IAAA,MAAA,KAAA,GAAAD,aAAA,MAAA;AACA,MAAA,MAAA,SAAA,EAAA,CAAA;AACA,MAAA,IAAA,OAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,YAAA,GAAA,CAAA,EAAA,OAAA,KAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,OACA;AACA,MAAA,OAAA,MAAA,CAAA;AAAA,KACA,CAAA,CAAA;AAEA,IAAA,MAAA,OAAA,GAAAA,aAAA,MAAA;AACA,MAAA,MAAA,WAAA,EAAA,CAAA;AACA,MAAA,MAAA,GAAA,GAAA,CAAA,MAAA,EAAA,QAAA,EAAA,QAAA,MAAA,CAAA,CAAA;AAEA,MAAA,GAAA,CAAA,OAAA,CAAA,CAAA,IAAA,KAAA;AACA,QAAA,MAAA,OAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA,QAAA,IAAAE,aAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,IAAA,IAAA,KAAA,MAAA;AAAA,YAAA,QAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,eAAA,IACA,IAAA,GAAA,CAAA;AAAA,YAAA,QAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,SACA;AAAA,OACA,CAAA,CAAA;AAEA,MAAA,MAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,IAAA,CAAA,CAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,CAAA,IAAA,KAAA;AACA,QAAA,IAAAA,aAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA,UAAA,QAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,SACA,MAAA,IAAAC,eAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,MAAA,QAAA,CAAA,KAAA;AACA,YAAA,QAAA,CAAA,IACA,CAAA,IAAA,KAAA,MACA,GAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,IACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,UAAA,CACA,CAAA,CAAA;AAAA,WACA,CAAA,CAAA;AAAA,SACA;AAAA,OACA,CAAA,CAAA;AAGA,MAAA,IAAA,OAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA;AAAA,OACA;AACA,MAAA,OAAA,QAAA,CAAA;AAAA,KACA,CAAA,CAAA;;;;;;;;;;;;;;;;;;"}