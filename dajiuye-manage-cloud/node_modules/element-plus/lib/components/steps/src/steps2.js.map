{"version":3,"file":"steps2.js","sources":["../../../../../../packages/components/steps/src/steps.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(simple ? 'simple' : direction)]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { provide, ref, watch } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { stepsEmits, stepsProps } from './steps'\n\nimport type { Ref } from 'vue'\nimport type { StepItemState } from './item.vue'\n\ndefineOptions({\n  name: 'ElSteps',\n})\n\nconst props = defineProps(stepsProps)\nconst emit = defineEmits(stepsEmits)\n\nconst ns = useNamespace('steps')\n\nconst steps: Ref<StepItemState[]> = ref([])\n\nwatch(steps, () => {\n  steps.value.forEach((instance: StepItemState, index: number) => {\n    instance.setIndex(index)\n  })\n})\n\nprovide('ElSteps', { props, steps })\n\nwatch(\n  () => props.active,\n  (newVal: number, oldVal: number) => {\n    emit(CHANGE_EVENT, newVal, oldVal)\n  }\n)\n</script>\n"],"names":["useNamespace","ref","watch","provide","CHANGE_EVENT"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,IAAA,MAAA,EAAA,GAAAA,mBAAA,OAAA,CAAA,CAAA;AAEA,IAAA,MAAA,KAAA,GAAAC,OAAA,CAAA,EAAA,CAAA,CAAA;AAEA,IAAAC,SAAA,CAAA,OAAA,MAAA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,QAAA,EAAA,KAAA,KAAA;AACA,QAAA,QAAA,CAAA,SAAA,KAAA,CAAA,CAAA;AAAA,OACA,CAAA,CAAA;AAAA,KACA,CAAA,CAAA;AAEA,IAAAC,WAAA,CAAA,SAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAEA,IAAAD,SAAA,CACA,MAAA,KAAA,CAAA,MACA,EAAA,CAAA,QAAA,MAAA,KAAA;AACA,MAAA,IAAA,CAAAE,kBAAA,EAAA,QAAA,MAAA,CAAA,CAAA;AAAA,KAEA,CAAA,CAAA;;;;;;;;;;;;;;"}