{"version":3,"file":"arrow2.js","sources":["../../../../../../packages/components/tooltip-v2/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :style=\"arrowStyle\" :class=\"ns.e('arrow')\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport { tooltipV2ContentKey, tooltipV2RootKey } from '@element-plus/tokens'\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElTooltipV2Arrow',\n})\n\nconst props = defineProps({\n  ...tooltipV2ArrowProps,\n  ...tooltipV2ArrowSpecialProps,\n})\n\nconst { ns } = inject(tooltipV2RootKey)!\nconst { arrowRef } = inject(tooltipV2ContentKey)!\n\nconst arrowStyle = computed<CSSProperties>(() => {\n  const { style, width, height } = props\n  const namespace = ns.namespace.value\n\n  return {\n    [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n    [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n    [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n    [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n    ...(style || {}),\n  }\n})\n</script>\n"],"names":["inject","tooltipV2RootKey","tooltipV2ContentKey","computed"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,IAAA,MAAA,EAAA,EAAA,EAAA,GAAAA,UAAA,CAAAC,0BAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,QAAA,EAAA,GAAAD,UAAA,CAAAE,6BAAA,CAAA,CAAA;AAEA,IAAA,MAAA,UAAA,GAAAC,aAAA,MAAA;AACA,MAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,KAAA,CAAA;AACA,MAAA,MAAA,SAAA,GAAA,GAAA,SAAA,CAAA,KAAA,CAAA;AAEA,MAAA,OAAA;AAAA,QACA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA;AAAA,QACA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA;AAAA,QACA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,8BAAA,CAAA,GAAA,CAAA,EAAA,KAAA,GAAA,CAAA,CAAA,EAAA,CAAA;AAAA,QACA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,6BAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA;AAAA,QACA,GAAA,SAAA,EAAA;AAAA,OACA,CAAA;AAAA,KACA,CAAA,CAAA;;;;;;;;;;;;;;;"}