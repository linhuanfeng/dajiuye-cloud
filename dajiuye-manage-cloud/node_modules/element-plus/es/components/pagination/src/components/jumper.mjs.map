{"version":3,"file":"jumper.mjs","sources":["../../../../../../../packages/components/pagination/src/components/jumper.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('jump')\" :disabled=\"disabled\">\n    {{ t('el.pagination.goto') }}\n    <el-input\n      size=\"small\"\n      :class=\"[ns.e('editor'), ns.is('in-pagination')]\"\n      :min=\"1\"\n      :max=\"pageCount\"\n      :disabled=\"disabled\"\n      :model-value=\"innerValue\"\n      type=\"number\"\n      @update:model-value=\"handleInput\"\n      @change=\"handleChange\"\n    />\n    {{ t('el.pagination.pageClassifier') }}\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { usePagination } from '../usePagination'\n\ndefineOptions({\n  name: 'ElPaginationJumper',\n})\n\nconst { t } = useLocale()\nconst ns = useNamespace('pagination')\nconst { pageCount, disabled, currentPage, changeEvent } = usePagination()\nconst userInput = ref<number>()\nconst innerValue = computed(() => userInput.value ?? currentPage?.value)\n\nfunction handleInput(val: number | string) {\n  userInput.value = +val\n}\n\nfunction handleChange(val: number | string) {\n  val = Math.trunc(+val)\n  changeEvent?.(+val)\n  userInput.value = undefined\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AA4BA,IAAA,MAAA,EAAA,MAAA,SAAA,EAAA,CAAA;AACA,IAAA,MAAA,EAAA,GAAA,aAAA,YAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAA,gBAAA,aAAA,EAAA,CAAA;AACA,IAAA,MAAA,YAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,aAAA,QAAA,CAAA,MAAA;AAEA,MAAA,IAAA,EAAA,CAAA;AACA,MAAA,OAAA,CAAA,EAAA,YAAA,CAAA,KAAA,KAAA,IAAA,GAAA,EAAA,GAAA,WAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAA,KAAA,CAAA;AAAA,KACA,CAAA,CAAA;AAEA,IAAA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA;AACA,KAAA;AACA,IAAA,SAAA,YAAA,CAAA,GAAA,EAAA;AAAA,MACA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}