{"version":3,"file":"affix2.mjs","sources":["../../../../../../packages/components/affix/src/affix.vue"],"sourcesContent":["<template>\n  <div ref=\"root\" :class=\"ns.b()\" :style=\"rootStyle\">\n    <div :class=\"{ [ns.m('fixed')]: fixed }\" :style=\"affixStyle\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, shallowRef, watch, watchEffect } from 'vue'\nimport {\n  useElementBounding,\n  useEventListener,\n  useWindowSize,\n} from '@vueuse/core'\nimport { getScrollContainer, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { affixEmits, affixProps } from './affix'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElAffix'\ndefineOptions({\n  name: 'ElAffix',\n})\n\nconst props = defineProps(affixProps)\nconst emit = defineEmits(affixEmits)\n\nconst ns = useNamespace('affix')\n\nconst target = shallowRef<HTMLElement>()\nconst root = shallowRef<HTMLDivElement>()\nconst scrollContainer = shallowRef<HTMLElement | Window>()\nconst { height: windowHeight } = useWindowSize()\nconst {\n  height: rootHeight,\n  width: rootWidth,\n  top: rootTop,\n  bottom: rootBottom,\n  update: updateRoot,\n} = useElementBounding(root)\nconst targetRect = useElementBounding(target)\n\nconst fixed = ref(false)\nconst scrollTop = ref(0)\nconst transform = ref(0)\n\nconst rootStyle = computed<CSSProperties>(() => {\n  return {\n    height: fixed.value ? `${rootHeight.value}px` : '',\n    width: fixed.value ? `${rootWidth.value}px` : '',\n  }\n})\n\nconst affixStyle = computed<CSSProperties>(() => {\n  if (!fixed.value) return {}\n\n  const offset = props.offset ? `${props.offset}px` : 0\n  return {\n    height: `${rootHeight.value}px`,\n    width: `${rootWidth.value}px`,\n    top: props.position === 'top' ? offset : '',\n    bottom: props.position === 'bottom' ? offset : '',\n    transform: transform.value ? `translateY(${transform.value}px)` : '',\n    zIndex: props.zIndex,\n  }\n})\n\nconst update = () => {\n  if (!scrollContainer.value) return\n\n  scrollTop.value =\n    scrollContainer.value instanceof Window\n      ? document.documentElement.scrollTop\n      : scrollContainer.value.scrollTop || 0\n\n  if (props.position === 'top') {\n    if (props.target) {\n      const difference =\n        targetRect.bottom.value - props.offset - rootHeight.value\n      fixed.value = props.offset > rootTop.value && targetRect.bottom.value > 0\n      transform.value = difference < 0 ? difference : 0\n    } else {\n      fixed.value = props.offset > rootTop.value\n    }\n  } else if (props.target) {\n    const difference =\n      windowHeight.value -\n      targetRect.top.value -\n      props.offset -\n      rootHeight.value\n    fixed.value =\n      windowHeight.value - props.offset < rootBottom.value &&\n      windowHeight.value > targetRect.top.value\n    transform.value = difference < 0 ? -difference : 0\n  } else {\n    fixed.value = windowHeight.value - props.offset < rootBottom.value\n  }\n}\n\nconst handleScroll = () => {\n  emit('scroll', {\n    scrollTop: scrollTop.value,\n    fixed: fixed.value,\n  })\n}\n\nwatch(fixed, (val) => emit('change', val))\n\nonMounted(() => {\n  if (props.target) {\n    target.value =\n      document.querySelector<HTMLElement>(props.target) ?? undefined\n    if (!target.value)\n      throwError(COMPONENT_NAME, `Target is not existed: ${props.target}`)\n  } else {\n    target.value = document.documentElement\n  }\n  scrollContainer.value = getScrollContainer(root.value!, true)\n  updateRoot()\n})\n\nuseEventListener(scrollContainer, 'scroll', handleScroll)\nwatchEffect(update)\n\ndefineExpose({\n  /** @description update affix status */\n  update,\n})\n</script>\n"],"names":[],"mappings":"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"}