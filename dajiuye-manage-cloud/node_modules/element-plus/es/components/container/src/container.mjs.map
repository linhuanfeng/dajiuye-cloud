{"version":3,"file":"container.mjs","sources":["../../../../../../packages/components/container/src/container.vue"],"sourcesContent":["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElContainer',\n})\nconst props = defineProps({\n  direction: {\n    type: String,\n  },\n})\nconst slots = useSlots()\n\nconst ns = useNamespace('container')\n\nconst isVertical = computed(() => {\n  if (props.direction === 'vertical') {\n    return true\n  } else if (props.direction === 'horizontal') {\n    return false\n  }\n  if (slots && slots.default) {\n    const vNodes: VNode[] = slots.default()\n    return vNodes.some((vNode) => {\n      const tag = (vNode.type as Component).name\n      return tag === 'ElHeader' || tag === 'ElFooter'\n    })\n  } else {\n    return false\n  }\n})\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAmBA,IAAA,MAAA,QAAA,QAAA,EAAA,CAAA;AAEA,IAAA,MAAA,EAAA,GAAA,aAAA,WAAA,CAAA,CAAA;AAEA,IAAA,MAAA,UAAA,GAAA,SAAA,MAAA;AACA,MAAA,IAAA,KAAA,CAAA,cAAA,UAAA,EAAA;AACA,QAAA,OAAA,IAAA,CAAA;AAAA,OACA,MAAA,IAAA,KAAA,CAAA,SAAA,KAAA,YAAA,EAAA;AACA,QAAA,OAAA,KAAA,CAAA;AAAA,OACA;AACA,MAAA,IAAA,KAAA,IAAA,MAAA,OAAA,EAAA;AACA,QAAA,MAAA,MAAA,GAAA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,OAAA,MAAA,CAAA,IAAA,CAAA,CAAA,KAAA,KAAA;AACA,UAAA,MAAA,GAAA,GAAA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,GAAA,KAAA,UAAA,CAAA;AAAA,SACA,CAAA,CAAA;AAAA,OACA,MAAA;AACA,QAAA,OAAA,KAAA,CAAA;AAAA,OACA;AAAA,KACA,CAAA,CAAA;;;;;;;;;;;;;;"}