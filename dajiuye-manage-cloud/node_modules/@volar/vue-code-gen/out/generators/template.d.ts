import { CodeGen } from '@volar/code-gen';
import * as CompilerDOM from '@vue/compiler-dom';
import { EmbeddedFileMappingData } from '../types';
export declare const transformContext: CompilerDOM.TransformContext;
export declare function isIntrinsicElement(runtimeMode: "runtime-dom" | "runtime-uni-app" | undefined, tag: string): boolean;
export declare function generate(ts: typeof import('typescript/lib/tsserverlibrary'), compilerOptions: {
    target: number;
    strictTemplates: boolean;
    experimentalRuntimeMode: 'runtime-dom' | 'runtime-uni-app' | undefined;
    experimentalAllowTypeNarrowingInInlineHandlers: boolean;
}, sourceLang: string, templateAst: CompilerDOM.RootNode, hasScriptSetup: boolean, cssScopedClasses: string[] | undefined, htmlToTemplate: (htmlRange: {
    start: number;
    end: number;
}) => {
    start: number;
    end: number;
} | undefined, searchTexts: {
    getEmitCompletion(tag: string): string;
    getPropsCompletion(tag: string): string;
}): {
    codeGen: CodeGen<EmbeddedFileMappingData>;
    formatCodeGen: CodeGen<EmbeddedFileMappingData>;
    cssCodeGen: CodeGen<EmbeddedFileMappingData>;
    tagNames: Record<string, number[]>;
    identifiers: Set<string>;
};
export declare function walkElementNodes(node: CompilerDOM.RootNode | CompilerDOM.TemplateChildNode, cb: (node: CompilerDOM.ElementNode) => void): void;
export declare function getPatchForSlotNode(node: CompilerDOM.ElementNode): CompilerDOM.ForNode | undefined;
